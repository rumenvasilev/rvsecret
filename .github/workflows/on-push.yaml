name: Build

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [ '1.21' ]

    permissions:
      ## Lint
      contents: read
      # Optional: allow read access to pull request. Use with `only-new-issues` option.
      # pull-requests: read

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Display Go version
        run: go version

      - name: Build
        run: go build -mod vendor -v ./...
      
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: v1.54

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          #
          # Note: By default, the `.golangci.yml` file should be at the root of the repository.
          # The location of the configuration file can be changed by using `--config=`
          # args: --timeout=30m --config=/my/path/.golangci.yml --issues-exit-code=0 

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true, then all caching functionality will be completely disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

          # Optional: The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
          # install-mode: "goinstall"

      - name: Test
        run: go test -mod vendor -race -v ./...
  
      - name: Create coverage report
        run: go test -mod vendor -coverprofile=coverage.out -v ./...

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      # - name: Run GoKart
      #   uses: kitabisa/gokart-action@v1.0.0
      #   with:
      #     globalsTainted: true

      # - name: Upload GoKart results
      #   uses: github/codeql-action/upload-sarif@v1
